/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import database.ConnectDatabase;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.ClassSubject;
import model.Student;
import view.Report;

/**
 *
 * @author quang
 */
public class ViewReportClassSubject extends javax.swing.JFrame {

    CallableStatement command = null;
    private Connection conn = null;
    private PreparedStatement stm = null;
    private ResultSet rs = null;
    private final ConnectDatabase connectDB = new ConnectDatabase();
    private String sql = "SELECT * FROM LOPMH where MaLopMH = ?";

    /**
     * Creates new form ViewReportClassSubject
     */
    public ViewReportClassSubject(String maLopMH) {
        initComponents();
        show_classSubject("");
    }

//    public ArrayList<ClassSubject> classSubjectList(String maLopMH) {
//        ArrayList<ClassSubject> classSubjectList = new ArrayList<>();
//        ResultSet rs = null;
//        Statement stm = null;
//        try {
////            conn = connectDB.getDBConnect();
////            stm = conn.createStatement();
////            rs = stm.executeQuery(sql);
//            conn = connectDB.getDBConnect();
//           // String malopmh = cbx_maMH.getText();
//            command = conn.prepareCall("{call DSSV_LOPMH (?)}");
//            command.setString(1, maLopMH);
//
//            //stm = conn.createStatement();
//            rs = command.executeQuery();
//            ClassSubject std;
//            while (rs.next()) {
//                std = new ClassSubject(
//                        rs.getString("maSV"),
//                        rs.getString("hoten"),
//                        rs.getString("lopQL")
//                );
//                classSubjectList.add(std);
//            }
//        } catch (Exception ex) {
//            ex.printStackTrace();
//        }
//        return classSubjectList;
//    }
//
//    public void show_classSubject() {
//        ArrayList<ClassSubject> list = classSubjectList(String maLopMH);
//        DefaultTableModel model = (DefaultTableModel) tableClassSubject.getModel();
//        Object[] row = new Object[8];
//        for (int i = 0; i < list.size(); i++) {
//            row[0] = list.get(i).getMaSV();
//            row[1] = list.get(i).getHoten();
//            row[2] = list.get(i).getLopQL();
//            model.addRow(row);
//        }
//    }

        
    public ArrayList<ClassSubject> classSubjectList(String maLopMH) {
    ArrayList<ClassSubject> classSubjectList = new ArrayList<>();
    ResultSet rs = null;
    CallableStatement command = null;
    try {
        conn = connectDB.getDBConnect();
        command = conn.prepareCall("{call DSSV_LOPMH (?)}");
        command.setString(1, maLopMH);
        rs = command.executeQuery();
        ClassSubject std;
        while (rs.next()) {
            std = new ClassSubject(
                    rs.getString("maSV"),
                    rs.getString("hoten"),
                    rs.getString("lopQL")
            );
            classSubjectList.add(std);
        }
    } catch (Exception ex) {
        ex.printStackTrace();
    } finally {
        try {
            rs.close();
            command.close();
            conn.close();
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }
    return classSubjectList;
}

public void show_classSubject(String maLopMH) {
   // ComboBoxGetClassSubject chuaCbx = new ComboBoxGetClassSubject();
    //String maLopMH = chuaCbx.getMaMH();
    ArrayList<ClassSubject> list = classSubjectList(maLopMH);
    DefaultTableModel model = (DefaultTableModel) tableClassSubject.getModel();
    Object[] row = new Object[3];
    for (int i = 0; i < list.size(); i++) {
        row[0] = list.get(i).getMaSV();
        row[1] = list.get(i).getHoten();
        row[2] = list.get(i).getLopQL();
        model.addRow(row);
    }
}


    private void loadClassSubject() {
        try {
            conn = connectDB.getDBConnect();
            stm = conn.prepareStatement(sql);
            rs = stm.executeQuery();
            if (rs.next());
            {

            }
        } catch (Exception e) {
            JOptionPane.showConfirmDialog(this, e.getMessage());
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        tableClassSubject = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tableClassSubject.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã sinh viên", "Tên sinh viên", "Lớp quản lý"
            }
        ));
        jScrollPane2.setViewportView(tableClassSubject);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Danh sách sinh viên lớp môn học");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(211, 211, 211)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(189, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 750, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(415, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(56, 56, 56)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(57, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewReportClassSubject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewReportClassSubject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewReportClassSubject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewReportClassSubject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
              //  new ViewReportClassSubject().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tableClassSubject;
    // End of variables declaration//GEN-END:variables
}
